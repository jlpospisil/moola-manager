{
	"variables": [],
	"info": {
		"name": "Moola Manager",
		"_postman_id": "7e8cf2f5-2c64-c814-0da3-430c74136084",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Accounts",
			"description": "",
			"item": [
				{
					"name": "/api/accounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"success\"] = response.success === true;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/accounts",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Test Account\"\n}"
						},
						"description": "Create a new account"
					},
					"response": []
				},
				{
					"name": "/api/accounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const accounts = JSON.parse(responseBody);",
									"const account_id = accounts.length > 0 ? accounts[0] : {};",
									"postman.setEnvironmentVariable(\"account_id\", account_id._id || \"\");",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"accounts exist\"] =  Array.isArray(accounts) && accounts.length > 0;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/accounts",
						"method": "GET",
						"header": [],
						"body": {},
						"description": "Get a list of all accounts"
					},
					"response": []
				},
				{
					"name": "/api/accounts/{{account_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"account exists\"] = typeof response.name === \"string\";"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/accounts/{{account_id}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": "Get a list of all accounts"
					},
					"response": []
				},
				{
					"name": "/api/accounts/{{account_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"success\"] = response.success === true;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/accounts/{{account_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Updated Account Name\"\n}"
						},
						"description": "Update an existing account"
					},
					"response": []
				},
				{
					"name": "/api/accounts/{{account_id}}/transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const transactions = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"transactions returned\"] = Array.isArray(transactions);"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/accounts/{{account_id}}/transactions",
						"method": "GET",
						"header": [],
						"body": {},
						"description": "Get a list of all accounts"
					},
					"response": []
				},
				{
					"name": "/api/accounts/{{account_id}}/transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"success\"] = response.success === true;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/accounts/{{account_id}}/transactions",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"amount\": \"1,207.82\",\n\t\"note\": \"Test Transaction\"\n}"
						},
						"description": "Get a list of all accounts"
					},
					"response": []
				},
				{
					"name": "/api/accounts/{{account_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"success\"] = response.success === true;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/accounts/{{account_id}}",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": "Delete an existing account"
					},
					"response": []
				}
			]
		},
		{
			"name": "Transactions",
			"description": "",
			"item": [
				{
					"name": "/api/transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"success\"] = response.success === true;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/transactions",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"amount\": \"1,207.82\",\n\t\"note\": \"Test Transaction\"\n}"
						},
						"description": "Create a new account"
					},
					"response": []
				},
				{
					"name": "/api/transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const transactions = JSON.parse(responseBody);",
									"const transaction_id = transactions.length > 0 ? transactions[0] : {};",
									"postman.setEnvironmentVariable(\"transaction_id\", transaction_id._id || \"\");",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"transactions exist\"] =  Array.isArray(transactions) && transactions.length > 0;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/transactions",
						"method": "GET",
						"header": [],
						"body": {},
						"description": "Get a list of all accounts"
					},
					"response": []
				},
				{
					"name": "/api/transactions/{{transaction_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"transaction exists\"] = typeof response.amount === \"string\";"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/transactions/{{transaction_id}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": "Get a list of all accounts"
					},
					"response": []
				},
				{
					"name": "/api/transactions/{{transaction_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"success\"] = response.success === true;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/transactions/{{transaction_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"amount\": 1,\n\t\"note\": \"Updated Transaction\"\n}"
						},
						"description": "Update an existing account"
					},
					"response": []
				},
				{
					"name": "/api/transactions/{{transaction_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"success\"] = response.success === true;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/transactions/{{transaction_id}}",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": "Delete an existing account"
					},
					"response": []
				}
			]
		}
	]
}